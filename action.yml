name: 'execute user code in an EIC environment'
description: 'Spawns appropriate docker image and executes user code in the environment of a specified EIC shell'
branding:
  icon: 'play'
  color: 'blue'
inputs:
  organization:
    description: 'EIC shell organization you are targeting (e.g. eic)'
    required: false
    default: 'eic'
  platform:
    description: 'EIC shell platform you are targeting (e.g. eic_xl)'
    required: false
    default: ''
  release:
    description: 'EIC shell release you are targeting (e.g. 3.0-stable)'
    required: false
    default: ''
  platform-release:
    description: 'EIC shell release platform string you are targeting (e.g. eic_xl:24.11.2-stable)'
    required: false
    default: ''
  run:
    description: 'They payload code you want to execute on top of the view'
    required: false
    default: ''
  setup:
    description: 'Environment initialization bash script that is sourced (e.g. install/bin/thisepic.sh)'
    required: false
    default: ''
  sandbox-path:
    description: 'Custom path where the sandbox is located'
    required: false
    default: ''
  network_types:
    description: 'Network access types inside EIC shell'
    required: false
    default: 'bridge'
  apptainer_version:
    description: 'Apptainer version to use (e.g. v1.1.3 or latest)'
    required: false
    default: 'v1.1.3'

runs:
  using: "composite"
  steps:
    - run: |
        ${{ github.action_path }}/setup-eic-shell.sh
      shell: bash
      env:
        THIS: ${{ github.action_path }}
        GITHUB_ACTOR: ${{ github.actor }}
        EIC_SHELL_ORGANIZATION: ${{ inputs.organization }}
        EIC_SHELL_RELEASE: ${{ inputs.release }}
        EIC_SHELL_PLATFORM_RELEASE: ${{ inputs.platform-release }}
        EIC_SHELL_PLATFORM: ${{ inputs.platform }}
        RUN: ${{ inputs.run }}
        SETUP: ${{ inputs.setup }}
        SANDBOX_PATH: ${{ inputs.sandbox-path }}
        NETWORK_TYPES: ${{ inputs.network_types }}
        APPTAINER_VERSION: ${{ inputs.apptainer_version }}
